WDIR=.
PDIR=$WDIR/.project
MODULES=$PDIR/modules
SRCDIR=$WDIR/src
BDIR=$WDIR/build
IDIR=$SRCDIR
CC=gcc
CC_FLAGS=(-c -std=c++2a -I$IDIR)
MODULE_TYPES=(APP LIB HEADER)

get_modules()
{
	cat $MODULES
}

MODULE_LIST=$(get_modules)

get_root_module()
{
	while read line; do
		echo $line
		break
	done <<< $MODULE_LIST
}

ROOT_MODULE=$(get_root_module)

is_module_type()
{
	local input=$1
	if [[ $input == APP || $input == LIB || $input == HEADER ]]; then
		true
	else
		false
	fi
}

is_module()
{
	local module=$1
	local module_list=$MODULE_LIST
	if [[ $module_list =~ $module ]]; then
		true
	else
		false
	fi
}

is_root_module()
{
	local module=$1
	if [[ $module == $ROOT_MODULE ]]; then
		true
	else
		false
	fi
}

get_module_type()
{
	local module=$1
	if is_module $module; then
		while read line; do
			if is_module_type $line; then
				echo $line
				break
			else
				continue
			fi
		done <<< $(cat $PDIR/$module)
	fi
}

module_to_dir()
{
	local module=$1
	if is_module $module; then
		if ! is_root_module $module; then
			echo $(echo $module | sed 's/\./\//g')
		fi
	fi
}

get_module_dir()
{
	local module=$1
	if is_root_module $module; then
		echo $SRCDIR
	elif is_module $module; then
		echo $SRCDIR/$(module_to_dir $module)
	fi
}

get_module_deps()
{
	local module=$1
	if is_module $module; then
		while read line; do
			if is_module $line; then
				echo $line
			fi
		done <<< $(cat $PDIR/$module)
	fi
}

get_module_files()
{
	local module=$1
	if is_module $module; then
		while read line; do
			if is_module $line; then
				continue
			elif is_module_type $line; then
				continue
			else
				echo $(get_module_dir $module)/$line
			fi
		done <<< $(cat $PDIR/$module)
	fi
}

get_file_list()
{
	local module=$1
	local module_files=$(get_module_files $module)
	echo $(echo $module_files | sed 's/\n/ /g')
}

get_module_headers()
{
	local module=$1
	while read line; do
		if [[ $line =~ .*\.'h' || $line =~ .*\.'inl' ]]; then
			echo $line
		fi
	done <<< $(get_module_files $module)
}

get_module_sources()
{
	local module=$1
	while read line; do
		if [[ $line =~ .*\.'cpp' || $line =~ .*\.'cxx' || $line =~ .*\.'c\+\+' ]]; then
			echo $line
		fi
	done <<< $(get_module_files $module)
}

get_header_list()
{
	local module=$1
	local module_headers=$(get_module_headers $module)
	echo $(echo $module_headers | sed 's/\n/ /g')
}

get_source_list()
{
	local module=$1
	local module_sources=$(get_module_sources $module)
	echo $(echo $module_sources | sed 's/\n/ /g')
}

get_obj_list()
{
	local module=$1
	local source_list=$(get_source_list $module)
	echo $(echo $source_list | sed 's/\.cxx/\.o/g; s/\.cpp/\.o/g; s/\.c\+\+/\.o/g')
}

has_source_files()
{
	local module=$1
	local source_list=$(get_source_list $module)
	if [ -z "$source_list" ]; then
		false
	else
		true
	fi
}

get_module_output()
{
	local module=$1
	if is_module $module; then
		if has_source_files $module; then
			if [[ $(get_module_type $module) == LIB ]]; then
				echo "dggt_"$module".so"
			elif [[ $(get_module_type $module) == APP ]]; then
				echo "dggt_"$module
			fi
		fi
	fi
}


